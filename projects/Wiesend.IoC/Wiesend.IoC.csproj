<Project Sdk="Microsoft.NET.Sdk">

  <!-- Target Fameworks [.NET Standard 2.0], [.NET Framework 4.5] -->
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
  </PropertyGroup>

  <!-- Set the [CodeContracts] settings for [.NET Framework 4.5] -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'net45'">
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestEnsures>False</CodeContractsSuggestEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
  </PropertyGroup>

  <!-- Product specific values -->
  <PropertyGroup>
    <AssemblyName>Wiesend.IoC</AssemblyName>
    <RootNamespace>Wiesend.IoC</RootNamespace>
    <AssemblyOriginatorKeyFile>[InternalKeys]\Wiesend.IoC.snk</AssemblyOriginatorKeyFile>
    <Product>Dominik Wiesend's [Dynamic Link Library] - Wiesend.IoC</Product>
    <PackageTags>wiesend, wiesend-dll, wiesend ioc</PackageTags>
  </PropertyGroup>

  <!-- Product non-specific values -->
  <PropertyGroup>
    <Description>Wiesend's Dynamic Link Library is a collection of reusable code that I've written, or found throughout my programming career. It includes code to help with tasks including encryption, file management, compression, serialization, email, image manipulation, SQL, various file formats (CSV, iCal, etc.), randomization, validation, various data types, reflection, code gen, events, code profiling, math related classes, etc.</Description>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://github.com/DominikWiesend/wiesend-dll/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://dominikwiesend.github.io/wiesend-dll/</PackageProjectUrl>
    <RepositoryUrl>https://github.com/DominikWiesend/wiesend-dll</RepositoryUrl>
    <RepositoryType>GitHub Repository</RepositoryType>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageReleaseNotes />
    <Company>Dominik Wiesend Cooperation</Company>
    <Authors>Dominik Wiesend</Authors>
    <Copyright>Copyright(c) 2018 Dominik Wiesend. All rights reserved.</Copyright>
    <SignAssembly>true</SignAssembly>
    <Version>5.0.1.0</Version>
    <FileVersion>4.0.0.0</FileVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Optimize>true</Optimize>
    <DocumentationFile />
  </PropertyGroup>

  <!-- Configuration (PropertyGroup) for [.NET Standard 2.0] and [.NET Framework 4.5] -->
  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <NoWarn>1701;1702;1705</NoWarn>
  </PropertyGroup>

  <!-- Constants (define) for the [Debug]-Configuration -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>TRACE;DEBUG;</DefineConstants>
    <RunCodeAnalysis>True</RunCodeAnalysis>
  </PropertyGroup>

  <!-- Property group for the [Release]-Configuration -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DefineConstants>RELEASE</DefineConstants>
    <RunCodeAnalysis>False</RunCodeAnalysis>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <IncludeSymbols>False</IncludeSymbols>
  </PropertyGroup>

  <!-- Property group for the [.NET Framework 4.5]-Configuration -->
  <PropertyGroup Condition="'$(TargetFramework)' == 'net45'">
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>True</DebugSymbols>
    <CodeAnalysisRuleSet>..\AnalyzerSet.ruleset</CodeAnalysisRuleSet>
    <CodeContractsRuntimeCheckingLevel>ReleaseRequires</CodeContractsRuntimeCheckingLevel>
  </PropertyGroup>
  
  <!-- Constants (define) for [.NET Standard 2.0] -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>NETCORE;NETSTANDARD;NETSTANDARD20</DefineConstants>
  </PropertyGroup>
  
  <!-- Constants (define) for [.NET Framework 4.5] -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45'">
    <DefineConstants>NET45;NETFULL</DefineConstants>
  </PropertyGroup>

  <!-- Nuget packages for [.NET Standard 2.0] and [.NET Framework 4.5] (Projects)-->
  <ItemGroup>
  </ItemGroup>
  
  <!-- Nuget packages for [.NET Standard 2.0] -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
  </ItemGroup>

  <!-- Nuget packages for [.NET Framework 4.5] -->
  <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  
</Project>